@import '../core/setup/index';

// This makes it look like there's a fold in the ribbon.
@mixin fold {
  --bg-color: var(--bg-transparent-dark);
  --position: absolute;
  @include bg;
  @include position;
  clip-path: polygon(0% 100%, 100% 0, 100% 100%);
  height: $fold-size;
  width: $fold-size;
}

@mixin ribbon {
  --bg-color: var(--callout-secondary-color);
  --display-as: inline-flex;
  --font-color: var(--text-on-dark-bg);

  // Default to medium size if no modifier added
  @include ribbon-md;
  @include bg;
  @include display-as;
  @include color;
  @include py;
  @include px;
  @include typeset;
  @include position;

  &::after {
    @include fold;
  }
}

@mixin ribbon-sm {
  --py: var(--spacing-xs);
  --px: var(--spacing-xs);
  --font-size: var(--type-size-f0);
  --line-height: var(--component-line-height-f0);
}

@mixin ribbon-md {
  --py: var(--spacing-sm);
  --px: var(--spacing-sm);
  --font-size: var(--type-size-f1);
  --line-height: var(--component-line-height-f1);
}

@mixin ribbon-lg {
  --py: var(--spacing-md);
  --px: var(--spacing-md);
  --font-size: var(--type-size-f2);
  --line-height: var(--component-line-height-f2);
}

$fold-size: var(--spacing-xs);
$ribbon-overlap: calc(var(--spacing-xs) * -1);

.weave-ribbon {
  @include ribbon;
}

.weave-ribbon--overlay {
  --elevation: var(--elevated-1);
  @include elevated;
  position: absolute;
}

.weave-ribbon--top-left {
  border-top-left-radius: var(--border-radius-default);
  left: $ribbon-overlap;
  top: $ribbon-overlap;

  &::after {
    bottom: $ribbon-overlap;
    content: '';
    left: 0;
    transform: rotate(270deg);
  }
}

.weave-ribbon--top-right {
  border-top-right-radius: var(--border-radius-default);
  right: $ribbon-overlap;
  top: $ribbon-overlap;

  &::after {
    bottom: $ribbon-overlap;
    content: '';
    right: 0;
    transform: rotate(180deg);
  }
}

.weave-ribbon--bottom-left {
  border-bottom-left-radius: var(--border-radius-default);
  bottom: $ribbon-overlap;
  left: $ribbon-overlap;

  &::after {
    content: '';
    left: 0;
    top: $ribbon-overlap;
  }
}

.weave-ribbon--bottom-right {
  border-bottom-right-radius: var(--border-radius-default);
  bottom: $ribbon-overlap;
  right: $ribbon-overlap;

  &::after {
    content: '';
    right: 0;
    top: $ribbon-overlap;
    transform: rotate(90deg);
  }
}

.weave-ribbon--sm { @include ribbon-sm; }
.weave-ribbon--md { @include ribbon-md; }
.weave-ribbon--lg { @include ribbon-lg; }

.weave-ribbon--responsive {
  @include viewport-equal-to-and-smaller-than('full') {
    @include ribbon-lg;
  };

  @include viewport-equal-to-and-smaller-than('lg') {
    @include ribbon-md;
  };

  @include viewport-equal-to-and-smaller-than('sm') {
    @include ribbon-sm;
  };
}
